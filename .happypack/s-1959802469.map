{"version":3,"sources":["src\\container\\home\\index.js"],"names":["mapStoreStateToProps","state","dispatch","testValue","app","inputValue","mapDispatches","fn","onTestAdd","v","onTestSubtract","HomePageContainer","props","Component","propTypes","func","object","number","location","any"],"mappings":";;;;;;;;AAIA;;;;AACA;;AACA;;AAGA;;;;AAIA;;;;;;;;;;+eAbA;;;AAGA;;;AAKA;AACyC;;;AAGzC;;;AACiD;;AAEjD;AACA,IAAMA,uBAAuB,SAAvBA,oBAAuB,CAACC,KAAD;AAAA,WAAY;AACrCC,kBAAUD,MAAMC,QADqB;AAErCC,mBAAWF,MAAMG,GAAN,CAAUC;AAFgB,KAAZ;AAAA,CAA7B;;AAMA;AACA;AACA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACJ,QAAD;AAAA,WAAe;AACjCK,YAAI;AACAC,uBAAW,mBAACC,CAAD,EAAO;AACdP,yBAAS,qBAAUM,SAAV,CAAoBC,CAApB,CAAT;AACH,aAHD;AAIAC,4BAAe,wBAACD,CAAD,EAAK;AAClBP,yBAAS,qBAAUQ,cAAV,CAAyBD,CAAzB,CAAT;AACD;AAND;AAD6B,KAAf;AAAA,CAAtB;;AAWA;;IACME,iB;;;AACF,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0IACTA,KADS;;AAEf,cAAKX,KAAL,GAAa,EAAb;AAFe;AAIlB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA;AACI,gEAAM,OAAO,KAAKW,KAAL,CAAWT,SAAxB,EAAmC,OAAO,KAAKS,KAAL,CAAWL,EAAX,CAAcC,SAAxD,EAAmE,YAAY,KAAKI,KAAL,CAAWL,EAAX,CAAcG,cAA7F;AADJ,aADJ;AAKH;;;;EAb2B,gBAAMG,S;;AAgBtC;AACA;AACA;;AAEAF,kBAAkBG,SAAlB,GAA8B;AAC1BZ,cAAU,iBAAEa,IADc;AAE1BR,QAAI,iBAAES,MAFoB;AAG1Bb,eAAW,iBAAEc,MAHa;AAI1BC,cAAU,iBAAEC,GAJc,CAIT;AAJS,CAA9B;;kBAOe,yBAAQnB,oBAAR,EAA8BM,aAA9B,EAA6CK,iBAA7C,C","file":"index.js","sourceRoot":"C:/Users/lin.chen/WebstormProjects/demo","sourcesContent":["/**\r\n * Created by lin.chen on 2017/7/11.\r\n */\r\n// 所需的各种插件\r\nimport React, { PropTypes as P } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router';\r\n\r\n// 所需的所有组件\r\nimport Test from '../../component/test'; // 引入第4步创建的组件\r\n\r\n\r\n// 本页面所需action\r\nimport appAction from '../../action/app_action'; // 稍后创建\r\n\r\n// 最终要交给redux管理的所有变量\r\nconst mapStoreStateToProps = (state) => ({\r\n    dispatch: state.dispatch,\r\n    testValue: state.app.inputValue,\r\n});\r\n\r\n\r\n// 最终要交给redux管理的所有action\r\n// 即定义哪些方法将成为action\r\nconst mapDispatches = (dispatch) => ({\r\n    fn: {\r\n        onTestAdd: (v) => {\r\n            dispatch(appAction.onTestAdd(v));\r\n        },\r\n        onTestSubtract:(v)=>{\r\n          dispatch(appAction.onTestSubtract(v));\r\n        },\r\n    },\r\n});\r\n\r\n// 创建组件\r\nclass HomePageContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Test value={this.props.testValue} onAdd={this.props.fn.onTestAdd} onSubtract={this.props.fn.onTestSubtract}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ==================\r\n// PropTypes\r\n// ==================\r\n\r\nHomePageContainer.propTypes = {\r\n    dispatch: P.func,\r\n    fn: P.object,\r\n    testValue: P.number,\r\n    location: P.any, // location对象包含了浏览器url中的各种信息，会自动被引入到当前组件中，如果不需要的话可以去掉\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapDispatches)(HomePageContainer);"]}