'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _redux = require('redux');

var _reactRouterRedux = require('react-router-redux');

var _appReducer = require('./app-reducer');

var _appReducer2 = _interopRequireDefault(_appReducer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 这个稍后创建

/* 利用官方提供的combineReducers将所有reducer组合成一个 */
var RootReducer = (0, _redux.combineReducers)({
  // 注意一定要加上routing: routerReducer 这是用于redux和react-router的连接
  routing: _reactRouterRedux.routerReducer,
  // 其他的reducers
  app: _appReducer2.default // 这里的命名，关系到container中取state对应的reducer的名字
});

/* 这里是我们自定义的各种reducer */
/**
 * Created by lin.chen on 2017/7/11.
 */
/*
 * 该Reducer为根reducer, 用于结合App中所有的reducer.
 * 由于Redux中必须只有一个store和一个reducer ,
 * 因此使用 combineReducers 来把多个reducer组合在一起
 */

exports.default = RootReducer;