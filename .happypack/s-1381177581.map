{"version":3,"sources":["src\\reducer\\app-reducer.js"],"names":["initState","inputValue","actDefault","state","testAdd","action","payload","Object","assign","testSubtract","getGeoInfo","value","reducerFn","type"],"mappings":";;;;;AAAA;;;AAGA,IAAMA,YAAY;AACdC,gBAAY,CADE,CACC;AADD,CAAlB;;AAIA;AACA,IAAMC,aAAa,SAAbA,UAAa,CAACC,KAAD;AAAA,WAAWA,KAAX;AAAA,CAAnB;;AAEA,IAAMC,UAAU,SAAVA,OAAU,CAACD,KAAD,EAAQE,MAAR,EAAmB;AAAA,QACvBC,OADuB,GACXD,MADW,CACvBC,OADuB;AAE/B;;AACA,WAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BF,oBAAYK;AADgB,KAAzB,CAAP;AAGH,CAND;;AAQA,IAAMG,eAAe,SAAfA,YAAe,CAACN,KAAD,EAAQE,MAAR,EAAmB;AAAA,QAC5BC,OAD4B,GAChBD,MADgB,CAC5BC,OAD4B;;AAEpC,WAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC5BF,oBAAYK;AADgB,KAAzB,CAAP;AAGH,CALD;;AAOA,IAAMI,aAAa,SAAbA,UAAa,CAACP,KAAD,EAAOE,MAAP,EAAiB;AAAA,QACzBC,OADyB,GACdD,MADc,CACzBC,OADyB;;AAEhC,WAAOC,OAAOC,MAAP,CAAc,EAAd,EAAiBL,KAAjB,EAAuB;AAC1BQ,eAAML;AADoB,KAAvB,CAAP;AAGH,CALD;;AAQA,IAAMM,YAAY,SAAZA,SAAY,GAA+B;AAAA,QAA9BT,KAA8B,uEAAtBH,SAAsB;AAAA,QAAXK,MAAW;;AAC7C,YAAQA,OAAOQ,IAAf;AACI;AACA,aAAK,WAAL;AACI,mBAAOT,QAAQD,KAAR,EAAeE,MAAf,CAAP;AACJ,aAAK,gBAAL;AACI,mBAAOI,aAAaN,KAAb,EAAoBE,MAApB,CAAP;AACJ,aAAK,yBAAL;AACI,mBAAOK,WAAWP,KAAX,EAAkBE,MAAlB,CAAP;AACJ;AACI,mBAAOH,WAAWC,KAAX,EAAkBE,MAAlB,CAAP;AATR;AAWH,CAZD;;kBAceO,S","file":"app-reducer.js","sourceRoot":"C:/Users/lin.chen/WebstormProjects/demo","sourcesContent":["/**\r\n * Created by lin.chen on 2017/7/11.\r\n */\r\nconst initState = {\r\n    inputValue: 0, // 初始值\r\n};\r\n\r\n/* action 对应的处理方法，用于更新state中的数据 */\r\nconst actDefault = (state) => state;\r\n\r\nconst testAdd = (state, action) => {\r\n    const { payload } = action;\r\n    // 原本初始的时候，inputValue,这里将最新的payload覆盖原来的值\r\n    return Object.assign({}, state, {\r\n        inputValue: payload,\r\n    });\r\n};\r\n\r\nconst testSubtract = (state, action) => {\r\n    const { payload } = action;\r\n    return Object.assign({}, state, {\r\n        inputValue: payload,\r\n    });\r\n};\r\n\r\nconst getGeoInfo = (state,action) =>{\r\n    const {payload} = action;\r\n    return Object.assign({},state,{\r\n        value:payload\r\n    });\r\n};\r\n\r\n\r\nconst reducerFn = (state = initState, action) => {\r\n    switch (action.type) {\r\n        // 匹配type来执行对应的方法，action中返回对应的type，这里就会执行对应的方法\r\n        case 'TEST::add':\r\n            return testAdd(state, action);\r\n        case 'TEST::subtract':\r\n            return testSubtract(state, action);\r\n        case 'GEOLOCATION::getGeoInfo':\r\n            return getGeoInfo(state, action);\r\n        default:\r\n            return actDefault(state, action);\r\n    }\r\n};\r\n\r\nexport default reducerFn;"]}